package com.app.dto;

import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;

import org.hibernate.validator.constraints.Length;

import com.app.Entities.Account;
import com.app.Entities.Address;
import com.app.Entities.Role;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
 public class UserDto {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long uid;
	
	@Column(name = "user_name",length = 40)
	@NotBlank(message = "Password can't be blank")
	private String userName;
	
	@Email
	@NotBlank(message = "Password can't be blank")
	@Column(length = 40,unique = true)
 	private String email;
	
	@Length(min =10 ,max = 10)
	@NotBlank(message = "Password can't be blank")
	private String phone;
	
	@Length(min = 6)
	@NotBlank(message = "Password can't be blank")
	@Column(length = 40)
	private String password;
	
	@Enumerated(EnumType.STRING)
	@Length(max=10)
	@NotBlank(message = "Password can't be blank")
	private Role role;
	
	@NotBlank(message = "Password can't be blank")
	private LocalDate DOB;
	
	@JoinColumn(name = "aid")
	@OneToOne
	private Address address;
	
	@JoinColumn(name="account_id")
	@OneToOne
	private Account account;
}