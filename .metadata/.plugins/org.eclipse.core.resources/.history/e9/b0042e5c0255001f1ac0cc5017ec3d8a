import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import javax.transaction.Transactional;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Service
@Transactional
public class ProductServiceImpl implements ProductService {

    @Autowired 
    private ProductDao prod;
    
    @Autowired 
    private ProductVariantDao variant;
    
    @Autowired
    private FilterDao filter;
    
    @Autowired
    private ModelMapper mapper;

    @Override
    public List<ProductResDTO> getProductsByFilter(ProdFilterReqDTO product) {
        // Fetch imgids based on color and size
        List<Long> imgids = filter.findByColorAndSize(product.getColor(), product.getSize());
        
        // Fetch products based on category
        List<Product> prods = prod.findByCategoryName(product.getCat());
        
        // Initialize result list
        List<ProductResDTO> result = new ArrayList<>();
        
        for (Product p : prods) {
            // Fetch variants by product ID
            List<ProductVariant> variants = variant.findBypid(p.getPid());
            
            // Filter variants by imgids
            List<ProductVariant> filteredVariants = variants.stream()
                .filter(v -> imgids.contains(v.getImgid()))
                .collect(Collectors.toList());
            
            // Convert to DTOs and add to result
            ProductResDTO dto = new ProductResDTO();
            dto.setProduct(p);
            dto.setVariants(filteredVariants.stream()
                .map(v -> mapper.map(v, ProductVariantDTO.class)) // Map to ProductVariantDTO
                .collect(Collectors.toList()));
            
            result.add(dto);
        }
        
        return result;
    }
}
